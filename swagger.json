{
	"openapi": "3.1.0",
	"info": {
		"version": "1.0.4",
		"title": "Power-pulse",
		"description": "Showing off swagger-ui-express",
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		 }
	},
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"servers": [{ "url": "http://localhost:3000" }, {"url": "https://power-pulse-back-end.onrender.com"}],
	"tags": [
	  {
		 "name": "Auth",
		 "description": "Authorization endpoints"
	  },
	  {
		"name": "Exercises",
		"description": "Exercises endpoints"
	 },
	 {
		"name": "Diary",
		"description": "Diary endpoints"
	 }
	],
	"paths": {
		"/api/auth/register": {
			"post": {
				"tags": ["Auth"],
				"summary": "User registration",
				"paramrters": [],
				"requestBody": {
					"description": "Registration's object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegistrationRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successful operation",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/RegistrationResponse"
							 }
						  }
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}						
					},
					"409": {
						"description": "Provided email already exists",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}		
				}
			}
		},
		"/api/auth/login": {
			"post": {
				"tags": ["Auth"],
				"summary": "User login",
				"paramrters": [],
				"requestBody": {
					"description": "Login object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/LoginResponse"
							 }
						  }
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}						
					}
				}
			}	
		},
		"/api/auth/current": {
			"get": {
				"tags": ["Auth"],
				"summary": "Current user",
				"paramrters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/CurrentResponse"
							 }
						  }
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}
				}
			}	
		},
		"/api/auth/logout": {
			"post": {
				"tags": ["Auth"],
				"summary": "User logout",
				"paramrters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Logout object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LogoutRequest"
							}
						}
					}
				},
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/LogoutResponse"
							 }
						  }
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}
				}
			}
		},
		"/api/auth/avatars": {
			"patch": {
				"tags": ["Auth"],
				"summary": "Update user avatar",
				"paramrters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Update avatar object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AvatarsRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/AvatarsResponse"
							 }
						  }
						}
					}					
				}
			}
		},
		"/api/auth/verify": {
			"post": {
				"tags": ["Auth"],
				"summary": "Verify email (send virification email)",
				"paramrters": [],
				"requestBody": {
					"description": "Verification email object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VerifyEmailRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/VerifyEmailResponse"
							 }
						  }
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}
				}
			}
		},
		"/api/auth/verify/{:verificationToken}": {
			"get": {
				"tags": ["Auth"],
				"summary": "Verify email with a verification token",
				"parameters": [
					{
						"in": "path",
						"name": ":verificationToken",
						"required": true,
						"type": "string",
						"description":	"Verification token"
					}
				],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/VerifyEmailResponse"
							 }
						  }
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							 }
						}
					}
				}
			}
		},
		"/exercises": {
			"get": {
				"tags": ["Exercises"],
				"summary": "Get all exercises",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/ExercisesResponse"
							 }
						  }
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/exercises/bodyparts": {
			"get": {
				"tags": ["Exercises"],
				"summary": "Get all body parts",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/ExercisesBodyPartsResponse"
							 }
						  }
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/exercises/muscules": {
			"get": {
				"tags": ["Exercises"],
				"summary": "Get all muscules",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/ExercisesMusclesResponse"
							 }
						  }
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/exercises/equipments": {
			"get": {
				"tags": ["Exercises"],
				"summary": "Get all equipments",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/ExercisesEquipmentsResponse"
							 }
						  }
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/diary/addproduct": {
			"post": {
				"tags": ["Diary"],
				"summary": "Add products",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Add product by id",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DiaryAddProductsRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/DiaryAddProductsResponse"
							 }
						   }
						}
					},
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/DiaryAddProductsResponse"
							 }
						   }
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
								  "$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				}
			}
		},
		"/diary/deleteproduct": {
			"delete": {
				"tags": ["Diary"],
				"summary": "Delete products",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Delete product by id",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DiaryDeleteProductsRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/DiaryDeleteProductsResponse"
							 }
						   }
						}
					},
					"404":{
						"description": "Not found",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/ErrorResponse"
							 }
						   }
						}
					}
				}
			}
		},
		"/diary/addexercise": {
			"post": {
				"tags": ["Diary"],
				"summary": "Add exercise",
				"parameters": [],
				"security": [{ "Bearer": [] }],
				"requestBody": {
					"description": "Add product by id",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DiaryAddExerciseRequest"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created",
						"content": {
						  "application/json": {
							 "schema": {
								"$ref": "#/components/schemas/DiaryAddExerciseResponse"
							 }
						   }
						}
					}
				}
			}	
		}
	},
	"components": {
		"schemas": {
			"RegistrationRequest": {
				"type": "object",
				"required": ["name", "email", "password"],
				"properties": {
					"name": {
						"type": "string",
						"description": "User name"
					},
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User password",
						"example": "qwe123"
					}
				}
			},
			"LoginRequest": {
				"type": "object",
				"required": ["email", "password"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "User password",
						"example": "qwe123"
					}
				}
			},
			"LogoutRequest": {
				"type": "object",
				"required": ["_id"],
				"properties": {
					"_id": {
						"type": "string",
						"description": "User id"
					}
				}
			},
			"AvatarsRequest": {
				"type": "object",
				"required": ["_id", "avatarURL"],
				"properties": {
					"_id": {
						"type": "string",
						"description": "User id"
					},
					"avatarURL": {
						"type": "string",
						"description": "New avatar URL"
					}
				}
			},
			"VerifyEmailRequest": {
				"type": "object",
				"required": ["email"],
				"properties": {
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					}
				}
			},
			"DiaryAddProductsRequest": {
				"type": "object",
				"required": ["productId", "date", "calories", "category", "recommended", "title", "amount"],
				"properties": {
					"productId": {
						"type": "string",
						"description": "Product id"
					},
					"date": {
						"type": "string",
						"description": "Date added product",
						"example": "DD/MM/YYYY"
					},
					"calories": {
						"type": "number",
						"description": "Number of calories"
					},
					"category": {
						"type": "string",
						"description": "Product category"
					},
					"recommended": {
						"type": "boolean",
						"description": "Кecommended product (true/false)"
					},
					"title": {
						"type": "string",
						"description": "Product title"
					},
					"amount": {
						"type": "number",
						"description": "Number of grams",
						"example": "100"						
					}							
				}
			},
			"DiaryDeleteProductsRequest": {
				"type": "object",
				"required": ["productId", "date"],
				"properties": {
					"productId": {
						"type": "string",
						"description": "Product id",
						"ref": "product"
					},
					"date": {
						"type": "string",
						"example": "DD/MM/YYYY"
					}
				}
			},
			"DiaryAddExerciseRequest": {
				"type": "object",
				"required": ["exerciseId", "date", "time", "calories"],
				"properties": {
					"exerciseId": {
						"type": "string",
						"description": "Exercise id"
					},
					"date": {
						"type": "string",
						"description": "Date added product",
						"example": "DD/MM/YYYY"
					},
					"time": {
						"type": "number",
						"description": "Number of calories"
					},
					"calories": {
						"type": "number",
						"description": "Exercise time"
					}						
				}
			},
			"RegistrationResponse": {
				"type": "object",
				"properties": {
					"user": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "User name"
							},
							"email": {
								"type": "string",
								"description": "User email"
							}
						}	
					},
					"message": {
						"type": "string",
						"descroption": "Message"
					} 
				}
			},
			"LoginResponse": {
				"type": "object",
				"properties": {
					"token": {
						"type": "string",
						"description": "User token"
					},
					"user": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "User name"
							},
							"email": {
								"type": "string",
								"description": "User email"
							},
							"avatar": {
								"type": "string",
								"descroption": "Avatar URL"
							}
						}	
					}					 
				}
			},
			"CurrentResponse": {
				"type": "object",
				"required": ["name", "email", "avatarURL"],
				"properties": {
					"name": {
						"type": "string",
						"description": "User name"
					},
					"email": {
						"type": "string",
						"description": "User email",
						"format": "email"
					},
					"avatarURL": {
						"type": "string",
						"description": "Avatar URL"
					}
				}
			},
			"LogoutResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"descroption": "Message",
						"example": "logout was successfull"
					}
				}
			},
			"AvatarsResponse": {
				"type": "object",
				"properties": {
					"avatarURL": {
						"type": "string",
						"descroption": "New avatar URL"
					}
				}
			},
			"VerifyEmailResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"descroption": "Message"
					}
				}
			},
			"ExercisesResponse": {
				"type": "array",
				"description": "Array with objects ",
				"items": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string",
							"description": "Exercise id"
						},
						"bodyPart": {
							"type": "string",
							"description": "Affected body part"
						},
						"equipment": {
							"type": "string",
							"description": "Necessary equipment"
						},
						"gifUrl": {
							"type": "string",
							"description": "URL to the example gif"
						},
						"name": {
							"type": "string",
							"description": "Exercise name"
						},
						"target": {
							"type": "string",
							"description": "Aim of exercise"
						},
						"burnedCalories": {
							"type": "number",
							"description": "Burns calories"
						},
						"time": {
							"type": "number",
							"description": "Time of the exercise"
						}
					}
				}				
			},
			"ExercisesBodyPartsResponse": {
				"type": "array",
				"description": "Array with objects ",
				"items": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string",
							"description": "Body part id"
						},
						"filter": {
							"type": "string",
							"description": "Filter by body parts"
						},
						"name": {
							"type": "string",
							"description": "Body part name"
						},
						"imgURL": {
							"type": "string",
							"description": "Image URL"
						}
					}
				}	
			},
			"ExercisesMusclesResponse": {
				"type": "array",
				"description": "Array with objects ",
				"items": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string",
							"description": "Muscle id"
						},
						"filter": {
							"type": "string",
							"description": "Filter by muscles"
						},
						"name": {
							"type": "string",
							"description": "Muscle name"
						},
						"imgURL": {
							"type": "string",
							"description": "Image URL"
						}
					}
				}
			},
			"ExercisesEquipmentsResponse": {
				"type": "array",
				"description": "Array with objects ",
				"items": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string",
							"description": "MuscleEquipment id"
						},
						"filter": {
							"type": "string",
							"description": "Filter by equipment"
						},
						"name": {
							"type": "string",
							"description": "Equipment name"
						},
						"imgURL": {
							"type": "string",
							"description": "Image URL"
						}
					}
				}
			},
			"DiaryAddProductsResponse": {
				"type": "object",
				"properties": {
					"date": {
						"type": "string",
						"description": "Add date",
						"example": "dd/mm/yyyy"
					},
					"owner": {
						"type": "string",
						"description": "Owner"
					},
					"productId": {
						"type": "string",
						"description": "Product id"
					},
					"calories": {
						"type": "number",
						"description": "Calories"
					},
					"category": {
						"type": "string",
						"description": "Food category"
					},
					"recommended": {
						"type": "boolean",
						"description": "Recommended product"
					}				
				}
			},
			"DiaryDeleteProductsResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"descroption": "Message"
					}
				}
			},
			"DiaryAddExerciseResponse": {
				"type": "object",
				"properties": {
					"exerciseId": {
						"type": "string",
						"description": " Exercise id"
					},
					"date": {
						"type": "string",
						"description": "Date added exercise",
						"example": "DD/MM/YYYY"
					},
					"time": {
						"type": "number",
						"description": "Exercise time"
					},
					"calories": {
						"type": "number",
						"description": "calories burned"
					},
					"owner": {
						"type": "string",
						"description": "Owner"
					}
				}
			},
			"ErrorResponse": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string",
						"descroption": "Message"
					}
				}
			}			
		},
		"securitySchemes": {
			"Bearer": {
			  "type": "http",
			  "scheme": "bearer",
			  "bearerFormat": "JWT"
			}
		}
	}
	
}